---
- name: Test approve device enrollment
  vars:
    enrollment_name: ansible-integration-test-enrollment
  block:
  - name: Create an enrollment request
    flightctl.edge.flightctl:
      flightctl_host: "{{ flightctl_host }}"
      kind: EnrollmentRequest
      name: "{{ enrollment_name }}"
      api_version: v1alpha1
      resource_definition:
        spec:
          csr: |
            -----BEGIN CERTIFICATE REQUEST-----
            MIIBBjCBrQIBADBLMUkwRwYDVQQDE0AxM2Q2MzJkODYzNzNjYWFlZGE2NGRhNDA1
            MmY5NTdmYWE3NDJmYzcwNTAwMjY3NDhiYzc5MDY1Yzg4MTlkMWIwMFkwEwYHKoZI
            zj0CAQYIKoZIzj0DAQcDQgAEHBMC30NRJTJ3NWOlei9YWkBM/MzoNDGyMRKuzE0/
            cKkyXVJexHq0xIn22YCNN3ZDNxxwW6LlQg3ijGnvStQOb6AAMAoGCCqGSM49BAMC
            A0gAMEUCIQDSrxi6krdCKcLChdMB3w7IqmDlZhREGbHMCESVn6ssPAIgZL+QrJtw
            8R+r4piaYvZktrsk3yCIuz3hI7loYmXP3d8=
            -----END CERTIFICATE REQUEST-----

  - name: Approve the enrollment request
    flightctl.edge.flightctl_approve:
      flightctl_host: "{{ flightctl_host }}"
      name: "{{ enrollment_name }}"
      approved: true
      approvedBy: "ansible-integration-testing"
      labels:
        testing_label: is_set_during_testing
    register: approve_result

  - name: Assert that approval request succeeded
    ansible.builtin.assert:
      that:
        - approve_result is success

  - name: Get the enrollment request
    flightctl.edge.flightctl_info:
      flightctl_host: "{{ flightctl_host }}"
      kind: EnrollmentRequest
      name: "{{ enrollment_name }}"
    register: enrollment_result

  - name: Assert that enrollment request is now approved
    ansible.builtin.assert:
      that:
        - enrollment_result is success
        - enrollment_result.result[0].status.approval.approved == True
        - enrollment_result.result[0].status.approval.approvedBy == "ansible-integration-testing"
        - enrollment_result.result[0].status.approval.labels['testing_label'] == "is_set_during_testing"

  always:
    - name: Delete enrollment request
      flightctl.edge.flightctl:
        flightctl_host: "{{ flightctl_host }}"
        kind: EnrollmentRequest
        name: "{{ enrollment_name }}"
        state: absent
    # Approving an enrollment request attempts to create a device, clean it up here as well
    - name: Delete test device
      flightctl.edge.flightctl:
        flightctl_host: "{{ flightctl_host }}"
        kind: Device
        name: "{{ enrollment_name }}"
        state: absent
