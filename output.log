Starting new "ansible-test-controller-4b9FiCLN" container.
Adding "ansible-test-controller-4b9FiCLN" to container database.
Installing requirements for Python 3.12 (controller)
Collecting git+https://github.com/flightctl/flightctl-python-client.git (from -r tests/integration/requirements.txt (line 3))
  Cloning https://github.com/flightctl/flightctl-python-client.git to /tmp/pip-req-build-7xrxziz2
  Running command git clone --filter=blob:none --quiet https://github.com/flightctl/flightctl-python-client.git /tmp/pip-req-build-7xrxziz2
  Resolved https://github.com/flightctl/flightctl-python-client.git to commit 2e1659c87a25c1b765f7dfd343d932a9eaa086b8
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Getting requirements to build wheel: started
  Getting requirements to build wheel: finished with status 'done'
  Preparing metadata (pyproject.toml): started
  Preparing metadata (pyproject.toml): finished with status 'done'
Collecting jsonschema (from -r tests/integration/requirements.txt (line 1))
  Downloading jsonschema-4.23.0-py3-none-any.whl (88 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 88.5/88.5 kB 2.5 MB/s eta 0:00:00
Collecting jsonpatch (from -r tests/integration/requirements.txt (line 2))
  Downloading jsonpatch-1.33-py2.py3-none-any.whl (12 kB)
Collecting attrs>=22.2.0 (from jsonschema->-r tests/integration/requirements.txt (line 1))
  Downloading attrs-25.1.0-py3-none-any.whl (63 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 63.2/63.2 kB 5.4 MB/s eta 0:00:00
Collecting jsonschema-specifications>=2023.03.6 (from jsonschema->-r tests/integration/requirements.txt (line 1))
  Downloading jsonschema_specifications-2024.10.1-py3-none-any.whl (18 kB)
Collecting referencing>=0.28.4 (from jsonschema->-r tests/integration/requirements.txt (line 1))
  Downloading referencing-0.36.2-py3-none-any.whl (26 kB)
Collecting rpds-py>=0.7.1 (from jsonschema->-r tests/integration/requirements.txt (line 1))
  Downloading rpds_py-0.22.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (385 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 385.7/385.7 kB 7.9 MB/s eta 0:00:00
Collecting jsonpointer>=1.9 (from jsonpatch->-r tests/integration/requirements.txt (line 2))
  Downloading jsonpointer-3.0.0-py2.py3-none-any.whl (7.6 kB)
Collecting python-dateutil>=2.8.2 (from flightctl==1.0.0->-r tests/integration/requirements.txt (line 3))
  Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 229.9/229.9 kB 15.5 MB/s eta 0:00:00
Collecting pydantic>=2 (from flightctl==1.0.0->-r tests/integration/requirements.txt (line 3))
  Downloading pydantic-2.10.6-py3-none-any.whl (431 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 431.7/431.7 kB 17.3 MB/s eta 0:00:00
Collecting typing-extensions>=4.7.1 (from flightctl==1.0.0->-r tests/integration/requirements.txt (line 3))
  Downloading typing_extensions-4.12.2-py3-none-any.whl (37 kB)
Collecting annotated-types>=0.6.0 (from pydantic>=2->flightctl==1.0.0->-r tests/integration/requirements.txt (line 3))
  Downloading annotated_types-0.7.0-py3-none-any.whl (13 kB)
Collecting pydantic-core==2.27.2 (from pydantic>=2->flightctl==1.0.0->-r tests/integration/requirements.txt (line 3))
  Downloading pydantic_core-2.27.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.0/2.0 MB 41.7 MB/s eta 0:00:00
Building wheels for collected packages: flightctl
  Building wheel for flightctl (pyproject.toml): started
  Building wheel for flightctl (pyproject.toml): finished with status 'done'
  Created wheel for flightctl: filename=flightctl-1.0.0-py3-none-any.whl size=219585 sha256=09e0334a7991363b369cb37ba494d5ff7d79a2472f83c2d1e16d5581150c4513
  Stored in directory: /tmp/pip-ephem-wheel-cache-w3pxn022/wheels/19/9b/38/122169ed77c33baaa00a6a623e58971fb411e27d1b382a362a
Successfully built flightctl
Installing collected packages: typing-extensions, rpds-py, python-dateutil, jsonpointer, attrs, annotated-types, referencing, pydantic-core, jsonpatch, pydantic, jsonschema-specifications, jsonschema, flightctl
Successfully installed annotated-types-0.7.0 attrs-25.1.0 flightctl-1.0.0 jsonpatch-1.33 jsonpointer-3.0.0 jsonschema-4.23.0 jsonschema-specifications-2024.10.1 pydantic-2.10.6 pydantic-core-2.27.2 python-dateutil-2.9.0.post0 referencing-0.36.2 rpds-py-0.22.3 typing-extensions-4.12.2
Running flightctl_certificate_management integration test role

PLAY [testhost] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [testhost]

TASK [flightctl_certificate_management : include_tasks] ************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_certificate_management-y5uqkny4-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_certificate_management/tasks/enrollment-approval.yml for testhost

TASK [flightctl_certificate_management : Create an enrollment request] *********
changed: [testhost]

TASK [flightctl_certificate_management : Approve the enrollment request in check mode] ***
changed: [testhost]

TASK [flightctl_certificate_management : Get the enrollment request] ***********
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the enrollment request was not approved] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Approve the enrollment request] *******
changed: [testhost]

TASK [flightctl_certificate_management : Assert that approval request succeeded] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Get the enrollment request] ***********
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the enrollment request is now approved] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Try to approve the enrollment request again (idempotency)] ***
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the result was not changed] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Delete enrollment request] ************
changed: [testhost]

TASK [flightctl_certificate_management : Delete test device] *******************
changed: [testhost]

TASK [flightctl_certificate_management : include_tasks] ************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_certificate_management-y5uqkny4-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_certificate_management/tasks/enrollment-denial.yml for testhost

TASK [flightctl_certificate_management : Create an enrollment request] *********
changed: [testhost]

TASK [flightctl_certificate_management : Deny the enrollment request in check mode] ***
changed: [testhost]

TASK [flightctl_certificate_management : Get the enrollment request] ***********
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the enrollment request was not denied] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Deny the enrollment request] **********
changed: [testhost]

TASK [flightctl_certificate_management : Assert that approval request succeeded] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Get the enrollment request] ***********
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the enrollment request is now denied] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Delete enrollment request] ************
changed: [testhost]

TASK [flightctl_certificate_management : include_tasks] ************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_certificate_management-y5uqkny4-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_certificate_management/tasks/certificate-signing-approval.yml for testhost

TASK [flightctl_certificate_management : Create a csr] *************************
changed: [testhost]

TASK [flightctl_certificate_management : Approve the csr] **********************
changed: [testhost]

TASK [flightctl_certificate_management : Assert that approval request succeeded] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Get the csr] **************************
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the csr is now approved] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Try to approve the csr again (idempotency)] ***
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the result was not changed] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Delete csr] ***************************
changed: [testhost]

TASK [flightctl_certificate_management : include_tasks] ************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_certificate_management-y5uqkny4-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_certificate_management/tasks/certificate-signing-denial.yml for testhost

TASK [flightctl_certificate_management : Create a csr] *************************
changed: [testhost]

TASK [flightctl_certificate_management : Deny the csr] *************************
changed: [testhost]

TASK [flightctl_certificate_management : Assert that approval request succeeded] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Get the csr] **************************
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the csr is now denied] ****
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Try to approve the csr again (idempotency)] ***
ok: [testhost]

TASK [flightctl_certificate_management : Assert that the result was not changed] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_certificate_management : Delete csr] ***************************
changed: [testhost]

PLAY RECAP *********************************************************************
testhost                   : ok=42   changed=15   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Running flightctl_enrollment_config_info integration test role

PLAY [testhost] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [testhost]

TASK [flightctl_enrollment_config_info : include_tasks] ************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_enrollment_config_info-bbd0x6pu-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_enrollment_config_info/tasks/fetch-config.yml for testhost

TASK [flightctl_enrollment_config_info : Create a csr] *************************
changed: [testhost]

TASK [flightctl_enrollment_config_info : Approve the csr] **********************
changed: [testhost]

TASK [flightctl_enrollment_config_info : Fetch enrollment config for the csr] ***
ok: [testhost]

TASK [flightctl_enrollment_config_info : Assert that the request was successful] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_enrollment_config_info : Delete csr] ***************************
changed: [testhost]

PLAY RECAP *********************************************************************
testhost                   : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Running flightctl_resource integration test role

PLAY [testhost] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [testhost]

TASK [flightctl_resource : include_tasks] **************************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_resource-ckdskl7c-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_resource/tasks/update-device.yml for testhost

TASK [flightctl_resource : Create a test device] *******************************
changed: [testhost]

TASK [flightctl_resource : Update the test device] *****************************
changed: [testhost]

TASK [flightctl_resource : Get test device] ************************************
ok: [testhost]

TASK [flightctl_resource : Assert that Device spec was updated] ****************
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource : Update the test device with force_update] ***********
changed: [testhost]

TASK [flightctl_resource : Get test device] ************************************
ok: [testhost]

TASK [flightctl_resource : Assert that Device spec was updated from the forced update] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource : Delete test device] *********************************
changed: [testhost]

PLAY RECAP *********************************************************************
testhost                   : ok=10   changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Running flightctl_resource_info integration test role

PLAY [testhost] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [testhost]

TASK [flightctl_resource_info : include_tasks] *********************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_resource_info-9dob_rep-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_resource_info/tasks/devices.yml for testhost

TASK [flightctl_resource_info : Create a test fleet] ***************************
changed: [testhost]

TASK [flightctl_resource_info : Create a test device] **************************
changed: [testhost]

TASK [flightctl_resource_info : Get test device] *******************************
ok: [testhost]

TASK [flightctl_resource_info : Assert that device info was fetched] ***********
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Get rendered spec for the test device] *********
ok: [testhost]

TASK [flightctl_resource_info : Assert that the rendered device info was fetched] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Create a test device with a label] *************
changed: [testhost]

TASK [flightctl_resource_info : Create a second test device with a label] ******
changed: [testhost]

TASK [flightctl_resource_info : Query for all devices by label] ****************
ok: [testhost]

TASK [flightctl_resource_info : Assert that the device info was fetched by label] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Query for all devices by owner] ****************
ok: [testhost]

TASK [flightctl_resource_info : Assert that the device info was filtered by owner] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Query for all devices] *************************
ok: [testhost]

TASK [flightctl_resource_info : Assert that the device info was fetched by label] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Query for all devices with summary_only] *******
ok: [testhost]

TASK [flightctl_resource_info : Assert that the device summary info was fetched] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Query for all devices with a limit] ************
ok: [testhost]

TASK [flightctl_resource_info : Assert that the limited info was fetched] ******
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Use the continue token to query for remaining devices] ***
ok: [testhost]

TASK [flightctl_resource_info : Assert that the limited info was fetched] ******
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Query for all devices with a status filter] ****
ok: [testhost]

TASK [flightctl_resource_info : Assert that the status filtered data was fetched] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Query for devices with a filter selector] ******
ok: [testhost]

TASK [flightctl_resource_info : Assert that the status filtered data was fetched] ***
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Delete test devices] ***************************
changed: [testhost]

TASK [flightctl_resource_info : Delete test fleet] *****************************
changed: [testhost]

TASK [flightctl_resource_info : include_tasks] *********************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_resource_info-9dob_rep-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_resource_info/tasks/fleets.yml for testhost

TASK [flightctl_resource_info : Create a test fleet] ***************************
changed: [testhost]

TASK [flightctl_resource_info : Create test devices] ***************************
changed: [testhost] => (item=test-device-1)
changed: [testhost] => (item=test-device-2)
changed: [testhost] => (item=test-device-3)

TASK [flightctl_resource_info : Fetch fleet] ***********************************
ok: [testhost]

TASK [flightctl_resource_info : Assert that the fleet info was fetched] ********
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Delete test devices] ***************************
changed: [testhost]

TASK [flightctl_resource_info : Delete test fleet] *****************************
changed: [testhost]

TASK [flightctl_resource_info : include_tasks] *********************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_resource_info-9dob_rep-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_resource_info/tasks/repository.yml for testhost

TASK [flightctl_resource_info : Create a test repo] ****************************
changed: [testhost]

TASK [flightctl_resource_info : Get test repo] *********************************
ok: [testhost]

TASK [flightctl_resource_info : Assert that repo info was fetched] *************
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Delete test repo] ******************************
changed: [testhost]

TASK [flightctl_resource_info : include_tasks] *********************************
included: /root/ansible_collections/flightctl/core/tests/output/.tmp/integration/flightctl_resource_info-9dob_rep-ÅÑŚÌβŁÈ/tests/integration/targets/flightctl_resource_info/tasks/resource-sync.yml for testhost

TASK [flightctl_resource_info : Create a test resource sync] *******************
changed: [testhost]

TASK [flightctl_resource_info : Get test resource sync] ************************
ok: [testhost]

TASK [flightctl_resource_info : Assert that resource sync info was fetched] ****
ok: [testhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [flightctl_resource_info : Delete test resource sync] *********************
changed: [testhost]

PLAY RECAP *********************************************************************
testhost                   : ok=45   changed=14   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

