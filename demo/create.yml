- name: Test Flight Control Collection to create resources
  hosts: localhost

  tasks:
    - name: Set default credentials
      ansible.builtin.set_fact:
        credential_defaults: &credential_defaults
          flightctl_config_file: "{{ flightctl_config_file }}"

    - name: Get all devices
      flightctl.edge.flightctl_info:
        <<: *credential_defaults
        kind: Device

    - name: Get all fleets
      flightctl.edge.flightctl_info:
        <<: *credential_defaults
        kind: Fleet

    - name: Get information about a specific device
      flightctl.edge.flightctl_info:
        <<: *credential_defaults
        kind: Device
        name: "2bd0rgpir74c5jtrhfb1idvb2cvvvinem24t727qdudfcqr60sog"
      register: result

    - name: Get information about a specific device
      flightctl.edge.flightctl_info:
        <<: *credential_defaults
        kind: Device
        label_selector: "owner=mparra"

    - name: Create a test device in check_mode
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example"
        resource_definition:
          apiVersion: v1alpha1
          kind: Device
          metadata:
            name: "device-ansible-example"
            labels:
              fleet: default
              novalue: ""
      check_mode: true

    - name: Create a test device
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example"
        resource_definition:
          apiVersion: v1alpha1
          kind: Device
          metadata:
            name: "device-ansible-example"
            labels:
              fleet: default
              novalue: ""
      register: _result

    - name: Assert that Device was created
      ansible.builtin.assert:
        that:
          - _result.changed
          - _result is success

    - name: Create a test device again (idempotence)
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example"
        resource_definition:
          apiVersion: v1alpha1
          kind: Device
          metadata:
            name: "device-ansible-example"
            labels:
              fleet: default
              novalue: ""
      register: _result

    - name: Assert that Device was not created
      ansible.builtin.assert:
        that:
          - not _result.changed
          - _result is success

    - name: Create a new test device
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example-2"
        api_version: v1alpha1
      register: _result

    - name: Assert that Device was created
      ansible.builtin.assert:
        that:
          - _result.changed
          - _result is success

    - name: Update new test device
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example-2"
        api_version: v1alpha1
        resource_definition:
          apiVersion: v1alpha1
          kind: Device
          metadata:
            labels:
              fleet: default
              novalue: ""
      register: _result

    - name: Assert that Device was updated
      ansible.builtin.assert:
        that:
          - _result.changed
          - _result is success

    - name: Get information about a specific device
      flightctl.edge.flightctl_info:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example"

    - name: Delete a test device in check_mode
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example"
        state: absent
      check_mode: true

    - name: Get information about a specific device
      flightctl.edge.flightctl_info:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example"

    - name: Create a new fleet
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Fleet
        name: "fleet-ansible-example"
        resource_definition: "{{ lookup('file', 'fleet.yml') | from_yaml }}"
      register: _result

    - name: Assert that Fleet was created
      ansible.builtin.assert:
        that:
          - _result.changed
          - _result is success

    - name: Create a new device
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Device
        name: "device-ansible-example-3"
        resource_definition: "{{ lookup('file', 'device.yml') | from_yaml }}"
      register: _result

    - name: Assert that Device was created
      ansible.builtin.assert:
        that:
          - _result.changed
          - _result is success

    - name: Create a new repository
      flightctl.edge.flightctl:
        <<: *credential_defaults
        kind: Repository
        name: "repository-ansible-example"
        resource_definition:
          apiVersion: v1alpha1
          kind: Repository
          metadata:
            name: repository-ansible-example
          spec:
            url: https://github.com/flightctl/flightctl.git
            type: git
      register: _result

    - name: Assert that Repository was created
      ansible.builtin.assert:
        that:
          - _result.changed
          - _result is success
